{"version":1,"ops":[{"type":1,"author":{"id":"027a2bcb19402705046b570711cd98e591403e96"},"timestamp":1352123851,"metadata":{"github-id":"MDU6SXNzdWU4MTA1Mjg0","github-url":"https://github.com/dlidstrom/Snittlistan/issues/145","origin":"github"},"title":"Korrekt mock av UrlHelper","message":"Gör så här:\n\n```\nprivate static UrlHelper CreateUrlHelper()\n{\n    var request = Mock.Of\u003cHttpRequestBase\u003e();\n    Mock.Get(request).Setup(r =\u003e r.ApplicationPath).Returns(\"/\");\n    Mock.Get(request).Setup(r =\u003e r.Url).Returns(new Uri(\"http://localhost/a\", UriKind.Absolute));\n    Mock.Get(request).Setup(r =\u003e r.ServerVariables).Returns(new NameValueCollection());\n\n    var response = Mock.Of\u003cHttpResponseBase\u003e();\n    Mock.Get(response).Setup(x =\u003e x.ApplyAppPathModifier(It.IsAny\u003cstring\u003e())).Returns((string url) =\u003e url);\n\n    var context = Mock.Of\u003cHttpContextBase\u003e();\n    Mock.Get(context).Setup(x =\u003e x.Request).Returns(request);\n    Mock.Get(context).Setup(x =\u003e x.Response).Returns(response);\n\n    var routes = new RouteCollection();\n    RouteConfig.RegisterRoutes(routes);\n    return new UrlHelper(new RequestContext(context, new RouteData()), routes);\n}\n```","files":null}]}