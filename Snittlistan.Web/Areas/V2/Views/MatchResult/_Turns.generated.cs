#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Snittlistan.Web.Views
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using Snittlistan.Web.Areas.V2;
    using Snittlistan.Web.Areas.V2.ViewModels;
    using Snittlistan.Web.HtmlHelpers;
    using Snittlistan.Web.Infrastructure;
    using Snittlistan.Web.Infrastructure.Database;
    using Snittlistan.Web.ViewModels;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/V2/Views/MatchResult/_Turns.cshtml")]
    public partial class _Areas_V2_Views_MatchResult__Turns_cshtml : Snittlistan.Web.Infrastructure.BaseViewPage<TeamOfWeekViewModel>
    {
        public _Areas_V2_Views_MatchResult__Turns_cshtml()
        {
        }
        public override void Execute()
        {

WriteLiteral(@"
<div class=""row"">
    <div class=""span12"">
        <p class=""lead"">
            De första 9 spelarna varje omgång får en inteckning i veckans lag.
            Vinnare är den spelare som samlar flest inteckningar under säsongen.
        </p>
        <section>
            <h3>Aktuell ställning</h3>
            <table class=""table table-condensed table-striped table-bordered"">
                <tr>
                    <th>#</th>
                    <th>Namn</th>
                    <th>Antal</th>
                </tr>
");


            
            #line 17 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                  
                    var rank = 0;
                    var rankstep = 1;
                    var previous = int.MaxValue;
                

            
            #line default
            #line hidden

            
            #line 22 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                 foreach (var item in Model.Leaders.Top9Total)
                {
                    if (previous != item.Count)
                    {
                        rank += rankstep;
                        rankstep = 1;
                    }
                    else
                    {
                        rankstep++;
                    }

                    previous = item.Count;


            
            #line default
            #line hidden
WriteLiteral("                    <tr>\r\n                        <td>");


            
            #line 37 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                       Write(rank);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td>");


            
            #line 38 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                       Write(item.Name);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                        <td>");


            
            #line 39 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                       Write(item.Count);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                    </tr>\r\n");


            
            #line 41 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                }

            
            #line default
            #line hidden
WriteLiteral("            </table>\r\n        </section>\r\n");


            
            #line 44 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
         foreach (var week in Model.Weeks.OrderByDescending(x => x.Turn))
        {

            
            #line default
            #line hidden
WriteLiteral("            <section id=\"");


            
            #line 46 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                    Write(string.Format("turn-{0}", week.Turn));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                <h3>Omgång ");


            
            #line 47 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                      Write(week.Turn);

            
            #line default
            #line hidden
WriteLiteral(@"</h3>
                <table class=""table table-condensed table-striped table-bordered table-medals"">
                    <tr>
                        <th>#</th>
                        <th>Namn</th>
                        <th>Resultat</th>
                        <th>Lag</th>
                    </tr>
");


            
            #line 55 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                      
                        var index = 0;
                        rank = 0;
                        rankstep = 1;
                        previous = int.MaxValue;
                        var indicatedTop9 = false;
                    

            
            #line default
            #line hidden

            
            #line 62 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                     foreach (var result in week.Players)
                    {
                        if (previous != result.Pins)
                        {
                            rank += rankstep;
                            rankstep = 1;
                        }
                        else
                        {
                            rankstep++;
                        }

                        previous = result.Pins;

                        var cl = string.Empty;
                        if (rank >= 10 && !indicatedTop9)
                        {
                            cl = "top9";
                            indicatedTop9 = true;
                        }


            
            #line default
            #line hidden
WriteLiteral("                        <tr class=\"");


            
            #line 83 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                              Write(cl);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n                            <td>");


            
            #line 84 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                           Write(rank);

            
            #line default
            #line hidden
WriteLiteral("</td>\r\n                            <td>\r\n                                ");


            
            #line 86 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                           Write(result.Name);

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                            <td>\r\n");


            
            #line 89 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                                 if (++index == 8)
                                {
                                    
            
            #line default
            #line hidden
            
            #line 91 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                                Write($"{result.PinsAndSeries} = {week.Top8}");

            
            #line default
            #line hidden
            
            #line 91 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                                                                              
                                }
                                else
                                {
                                    
            
            #line default
            #line hidden
            
            #line 95 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                               Write(result.PinsAndSeries);

            
            #line default
            #line hidden
            
            #line 95 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                                                         
                                }

            
            #line default
            #line hidden
WriteLiteral("                                ");


            
            #line 97 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                           Write(Html.Raw(string.Join(" ", result.Medals.Select(x => x.ToHtml()))));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                            <td>\r\n          " +
"                      ");


            
            #line 100 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                           Write(Content.TeamLabel(result.TeamLevel, result.Team));

            
            #line default
            #line hidden
WriteLiteral("\r\n                            </td>\r\n                        </tr>\r\n");


            
            #line 103 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
                    }

            
            #line default
            #line hidden
WriteLiteral("                </table>\r\n            </section>\r\n");


            
            #line 106 "..\..\Areas\V2\Views\MatchResult\_Turns.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n</div>");


        }
    }
}
#pragma warning restore 1591
