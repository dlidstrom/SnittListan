@model RosterViewModel

<div class="well well-small">
    @if (Request.IsAuthenticated)
    {
        <a href="@Url.Action("EditPlayers", new { Model.Id })" class="pull-right">
            <i class="sprite-glyphicons_151_edit"></i>
        </a>
    }
    @if (Model.Preliminary && User.Identity.IsAuthenticated)
    {
        <div class="alert alert-info">
            <strong>Preliminär</strong> Gömd för vanliga användare
        </div>
    }
    @if (Model.Preliminary && User.Identity.IsAuthenticated == false)
    {
        @* Hide preliminaries for regular users *@
        Model.Players.Clear();
    }
    <table class="table table-condensed">
        <tr>
            <th>Bord</th>
            <th>Namn</th>
        </tr>
        @for (var i = 0; i < 4; i++)
        {
            <tr>
                <td rowspan="2">@(i + 1)</td>
                <td>
                    @{
                        var first = this.Model.Players.ElementAtOrDefault(2 * i);
                    }
                    @if (first != null)
                    {
                        @first.Item2
                    }
                </td>
            </tr>
            <tr>
                <td>
                    @{
                        var second = this.Model.Players.ElementAtOrDefault(2 * i + 1);
                    }
                    @if (second != null)
                    {
                        @second.Item2
                    }
                </td>
            </tr>
        }
        <tr>
            <td rowspan="2">R</td>
            <td>
                @{
                    var reserve = Model.Players.ElementAtOrDefault(8);
                }
                @if (reserve != null)
                {
                    @reserve.Item2
                }
            </td>
        </tr>
    </table>
</div>
