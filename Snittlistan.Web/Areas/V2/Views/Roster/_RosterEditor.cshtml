@using Snittlistan.Web.Models
@model Snittlistan.Web.Areas.V2.Controllers.RosterController.CreateRosterViewModel

<div class="control-group">
    <label class="control-label" for="season">Säsong:</label>
    <div class="controls">
        <input type="text"
               id="season"
               name="season"
               placeholder="Säsong"
               autofocus="autofocus"
               title="Ange säsong"
               pattern="\d*"
               required="required"
               value="@Model.Season" />
        <span class="help-block">
            Ange säsongen för matchen. Skriv första delen av säsongen, t.ex. <strong>@Model.Season</strong>&minus;@(Model.Season + 1).
            Vanligtvis är det redan rätt ifyllt.
        </span>
    </div>
</div>
<div class="control-group">
    <label class="control-label" for="turn">Omgång:</label>
    <div class="controls">
        <select id="turn" name="turn">
            @for (var i = 1; i <= 25; i++)
            {
                if (Model.Turn == i)
                {
                    <option selected>@i</option>
                }
                else
                {
                    <option>@i</option>
                }
            }
        </select>
    </div>
</div>
<div class="control-group">
    <label class="control-label" for="bitsMatchId">BITS Match Id:</label>
    <div class="controls">
        <input type="text"
               id="bitsMatchId"
               name="bitsMatchId"
               placeholder="BITS Match Id"
               title="Ange match id"
               pattern="\d*"
               required="required"
               readonly="readonly"
               value="@Model.BitsMatchId" />
    </div>
</div>
<div class="control-group">
    <label class="control-label" for="team">Lag:</label>
    <div class="controls">
        <select id="team" name="team">
            @foreach (WebsiteConfig.TeamNameAndLevel nameAndLevel in ViewBag.TeamNamesAndLevels)
            {
                <option value="@nameAndLevel.FormattedForOption"
                        @if (nameAndLevel.TeamName == Model.Team) { <text> selected="selected" </text> }>
                    @nameAndLevel.TeamName
                </option>
            }
        </select>
    </div>
</div>
<div class="control-group">
    <div class="controls">
        <label class="checkbox">
            @Html.EditorFor(model => model.IsFourPlayer) 4-manna
        </label>
    </div>
</div>
<div class="control-group">
    <label class="control-label" for="opponent">Motståndare:</label>
    <div class="controls">
        <input type="text"
               id="opponent"
               name="opponent"
               placeholder="Motståndare"
               autocorrect="off"
               autocomplete="off"
               spellcheck="false"
               value="@Model.Opponent"
               required
               data-enabletypeahead="yes"
               data-url="/search/opponents" />
    </div>
</div>
<div class="control-group">
    @Html.LabelFor(x => x.Date, new { @class = "control-label" })
    <div class="controls">
        @Html.TextBoxFor(
            x => x.Date,
            new
            {
                @class = "date-picker",
                @readonly = "readonly",
                required = "required",
                placeholder = "Välj datum",
                data_datepicker = "",
                data_timepicker = "true"
            })
    </div>
</div>
<div class="control-group">
    <label class="control-label" for="location">Plats:</label>
    <div class="controls">
        <input type="text"
               id="location"
               name="location"
               placeholder="Bowlinghall"
               autocorrect="off"
               autocomplete="off"
               spellcheck="false"
               value="@Model.Location"
               required
               data-enabletypeahead="yes"
               data-url="/search/locations" />
    </div>
</div>
<div class="control-group">
    <label class="control-label" for="oilPatternName">Oljeprofil:</label>
    <div class="controls">
        <input type="text"
               id="oilPatternName"
               name="oilPatternName"
               placeholder="Oljeprofil"
               autocorrect="off"
               autocomplete="off"
               spellcheck="false"
               @if (Model.BitsMatchId != 0) { <text> readonly="readonly" </text>  }
               value="@Model.OilPatternName"
               data-enabletypeahead="yes"
               data-url="/search/oilpattern" />
        @Html.HiddenFor(x => x.OilPatternUrl)
    </div>
</div>
