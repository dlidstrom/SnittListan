@model ViewTurnViewModel

<div class="row">
    <div class="span12">
        <h1 class="pull-left">Omgång @Model.Turn</h1>
        @if (User.IsInRole(WebsiteRoles.Roster.EditRoster))
        {
            <div class="pull-right">
                @using (Html.BeginForm(
                    "Print",
                    "Roster",
                    new { Model.Season, Model.Turn },
                    FormMethod.Post,
                    new { id = "printForm" }))
                {
                    <div class="print-options-container">
                        <div class="print-option">
                            <label for="ExcludePast">
                                @Html.CheckBox("ExcludePast", true) Utan passerade matcher
                            </label>
                        </div>
                        <div class="print-option">
                            <label for="ExcludePreliminary">
                                @Html.CheckBox("ExcludePreliminary", true) Utan preliminära matcher
                            </label>
                        </div>
                        <div class="print-option">
                            <label for="WithAbsence">
                                @Html.CheckBox("WithAbsence", true) Med frånvaro
                            </label>
                        </div>
                        <div class="print-option">
                            <label for="Pdf">
                                @Html.CheckBox("Pdf", false) Skapa pdf
                            </label>
                        </div>
                    </div>
                    <div class="print-links-container">
                        <button class="btn btn-secondary btn-small" type="submit">
                            <i class="sprite-glyphicons_015_print"></i>
                            Utskrift
                        </button>
                    </div>
                }
            </div>
        }
        <div class="clearfix"></div>
    </div>
</div>

@{
    var start = 0;
    var rosters = Model.RosterViewModels.Skip(start).Take(3).ToList();
}
@while (rosters.Count > 0)
{
    <div class="row">
        @foreach (var roster in rosters)
        {
            <div class="span4">
                @Html.DisplayFor(model => roster, "Roster", new { hideControls = true })
                @Html.DisplayFor(model => roster, "Players")
            </div>
        }
    </div>

    start += 3;
    rosters = Model.RosterViewModels.Skip(start).Take(3).ToList();
}
@if (User.IsInRole(WebsiteRoles.Roster.EditRoster))
{
    @Html.Action("PlayerStatus", new
    {
        turn = Model.Turn,
        season = Model.Season
    })
}