@model InitialDataViewModel
<div class="row">
    <div class="span6">
        <h2>Säsongen @Model.SeasonStart&minus;@Model.SeasonEnd</h2>
    </div>
</div>
@if (Request.IsAuthenticated)
{
    <div class="row">
        <div class="span6 admin">
            <a href="@Url.Action("Create")">
                <i class="sprite-glyphicons_030_pencil"></i>
                Lägg till match
            </a>
        </div>
    </div>
}
@foreach (var turn in Model.Turns)
{
    <div class="row">
        <div class="span4">
            <h3>Omgång @turn.Turn</h3>
        </div>
    </div>
    <em>
        (<time datetime="@turn.StartDate.ToString("s")">@turn.StartDate.ToString("d MMM")</time>
        &minus;
        <time datetime="@turn.EndDate.ToString("s")">@turn.EndDate.ToString("d MMM")</time>)
    </em>
    var start = 0;
    var rosters = turn.Rosters.Skip(start).Take(3).ToList();
    while (rosters.Count > 0)
    {
        <div class="row">
            @foreach (var roster in rosters)
            {
                <div class="span4 well well-small">
                    @Html.DisplayFor(model => roster, "Roster")
                </div>
            }
        </div>
        <div class="row">
            <div class="span4">
                <a href="@Url.Action("View", new { season = Model.SeasonStart, turn = turn.Turn })">
                    <i class="sprite-glyphicons_029_notes_2"></i>
                    Visa uttagningar
                </a>
            </div>
        </div>
        start += 3;
        rosters = turn.Rosters.Skip(start).Take(3).ToList();
    }
}