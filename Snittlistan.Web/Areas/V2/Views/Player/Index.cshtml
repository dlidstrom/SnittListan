@using Snittlistan.Web.Areas.V2.Domain
@model List<PlayerViewModel>

@helper ShowPlayer(PlayerViewModel player)
{
    <tr>
        <td>@player.Name (@player.Nickname)</td>
        <td>@player.StatusText</td>
        @if (User.IsInRole2(WebsiteRoles.Player.ShowEmailAddresses))
        {
            <td>
                @if (player.Email != null)
                {
                    <a href="mailto:@player.Email">@player.Email</a>
                }
            </td>
        }
        @if (User.IsInRole2(WebsiteRoles.Player.EditPlayer))
        {
            <td>
                <a href="@Url.Action("Edit", new { id = player.Id.Substring(player.Id.LastIndexOf('-') + 1) })">
                    <i class="sprite-glyphicons_151_edit"></i>
                </a>
            </td>
        }
    </tr>
}

<div class="row">
    <div class="span6">
        <h4>Spelare och supporters</h4>
    </div>
</div>
<div class="row">
    <div class="span8">
        @if (User.IsInRole2(WebsiteRoles.Player.EditPlayer))
        {
            <a class="pull-left" href="@Url.Action("Create")">
                <i class="sprite-glyphicons_006_user_add"></i>
                Lägg till spelare
            </a>
        }
        @if (User.IsInRole2(WebsiteRoles.Player.SendEmailToAll))
        {
            <div class="btn-group pull-right">
                <button type="button" class="btn btn-small btn-primary dropdown-toggle" data-toggle="dropdown">
                    Skicka e-post
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu">
                    <li>
                        <a href="mailto:@string.Join(",", new HashSet<string>(Model.Where(x => x.Status != Player.Status.Inactive && x.Email != null).Select(x => x.Email)))">
                            Till alla (komma-separerade; iPhone/Android)
                        </a>
                    </li>
                    <li>
                        <a href="mailto:@string.Join(";", new HashSet<string>(Model.Where(x => x.Status != Player.Status.Inactive && x.Email != null).Select(x => x.Email)))">
                            Till alla (semikolon-separerade; Outlook)
                        </a>
                    </li>
                </ul>
            </div>
            <div class="clearfix"></div>
        }
    </div>
</div>
<div class="row">
    <div class="span8">
        <table class="table table-condensed table-striped">
            <tr>
                <th>Namn</th>
                <th>Status</th>
                @if (User.IsInRole2(WebsiteRoles.Player.ShowEmailAddresses))
                {
                    <th>E-postadress</th>
                    <th></th>
                    @*<th></th>*@
                }
            </tr>
            @foreach (var player in Model.Where(x => x.Status == Player.Status.Active))
            {
                @ShowPlayer(player)
            }

            @foreach (var player in Model.Where(x => x.Status == Player.Status.Supporter))
            {
                @ShowPlayer(player)
            }

            @if (User.IsInRole2(WebsiteRoles.Player.ShowInactive))
            {
                foreach (var player in Model.Where(x => x.Status == Player.Status.Inactive))
                {
                    @ShowPlayer(player)
                }
            }
        </table>
    </div>
</div>
